name: Build and Deploy

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
      - name: Compute SHORT_SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/jag-bot:latest
  deploy-prep:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    outputs:
      changelog: ${{ steps.changelog.outputs.log }}
      slug: ${{ steps.slug.outputs.sha }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          # need this for the changelog
          fetch-depth: 0
      - name: Short hash
        id: slug
        run: echo ::set-output name=sha::${GITHUB_SHA::7}
      - name: Changelog
        id: changelog
        run: |
          CHANGELOG=$(git shortlog --no-merges ${{ github.event.before }}..${{ github.event.after }})
          CHANGELOG=${CHANGELOG//'%'/'%25'}
          CHANGELOG=${CHANGELOG//$'\n'/'%0A'}
          echo "::set-output name=log::${CHANGELOG}"
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    needs: [deploy-prep]
    steps:
      - uses: actions/checkout@v3
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"
      - run: |-
          gcloud --quiet auth configure-docker
      - name: Get GKE credentials
        uses: "google-github-actions/get-gke-credentials@v0"
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          cluster_name: "production"
          location: "us-central1-c"
      - uses: azure/setup-helm@v3
      - name: Lint helm charts
        run: helm lint ./kubernetes/charts/jag-bot/
      - name: Deploy
        run: |
          helm upgrade --install --atomic --timeout 1m  \
          jag-bot ./kubernetes/charts/jag-bot/
